{"version":3,"file":"index.js","sources":["../src/Cell2D.ts","../src/Array2D.ts"],"sourcesContent":["import { Array2D } from \"./Array2D\";\n\nexport class Cell2D<T> {\n  private readonly array2D: Array2D<T>;\n  content: T;\n\n  constructor(grid: Array2D<T>, content: T = null) {\n    this.array2D = grid;\n    this.content = content;\n  }\n}\n","import { Cell2D } from \"./Cell2D\";\n\nexport class Array2D<T> {\n  content: Array<Array<Cell2D<T>>>;\n\n  constructor(rows: number, columns: number) {\n    this.content = this.setupCells(rows, columns);\n  }\n\n  private setupCells(rows: number, columns: number) {\n    // Empty array will store the row\n    const content: Array<Array<Cell2D<T>>> = [];\n\n    for (let r = 0; r < rows; r++) {\n      // Empty array will store the cells\n      const row: Array<Cell2D<T>> = [];\n\n      // Pushing the cells to row\n      for (let c = 0; c < columns; c++) {\n        row.push(new Cell2D(this));\n      }\n\n      // Pushing the row to content\n      content.push(row);\n    }\n\n    return content;\n  }\n}\n"],"names":["Cell2D","grid","content","array2D","Array2D","rows","columns","setupCells","r","row","c","push"],"mappings":"IAEaA,MAAb,GAIE,gBAAYC,IAAZ,EAA8BC,OAA9B;MAA8BA;AAAAA,IAAAA,UAAa;;;AACzC,OAAKC,OAAL,GAAeF,IAAf;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD;;ICPUE,OAAb;AAGE,mBAAYC,IAAZ,EAA0BC,OAA1B;AACE,SAAKJ,OAAL,GAAe,KAAKK,UAAL,CAAgBF,IAAhB,EAAsBC,OAAtB,CAAf;AACD;;AALH;;AAAA,SAOUC,UAPV,GAOU,oBAAWF,IAAX,EAAyBC,OAAzB;AACN;AACA,QAAMJ,OAAO,GAA4B,EAAzC;;AAEA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,EAA3B,EAA+B;AAC7B;AACA,UAAMC,GAAG,GAAqB,EAA9B,CAF6B;;AAK7B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAApB,EAA6BI,CAAC,EAA9B,EAAkC;AAChCD,QAAAA,GAAG,CAACE,IAAJ,CAAS,IAAIX,MAAJ,CAAW,IAAX,CAAT;AACD,OAP4B;;;AAU7BE,MAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb;AACD;;AAED,WAAOP,OAAP;AACD,GAzBH;;AAAA;AAAA;;;;;"}